# Generated by Django 5.2.3 on 2025-06-22 12:45

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Academy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the academy', max_length=200, unique=True)),
                ('base_url', models.URLField(blank=True, help_text='Base URL of the academy website')),
                ('program_url', models.URLField(blank=True, help_text="URL to the academy's program page")),
                ('colour', models.CharField(blank=True, help_text='Hex color code (e.g., #FF5733)', max_length=7)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Academies',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Language name (e.g., Nederlands, English)', max_length=100, unique=True)),
                ('code', models.CharField(blank=True, help_text='Language code (e.g., nl, en)', max_length=10)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Location name', max_length=200, unique=True)),
                ('url', models.URLField(blank=True, help_text='URL with location details')),
                ('address', models.TextField(blank=True, help_text='Physical address')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Full name of the teacher', max_length=200, unique=True)),
                ('profile_url', models.URLField(blank=True, help_text="URL to teacher's profile page")),
                ('title', models.CharField(blank=True, help_text='Academic title (e.g., Prof. dr.)', max_length=100)),
                ('bio', models.TextField(blank=True, help_text='Teacher biography')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('academy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='academies.academy')),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'ordering': ['academy__name', 'name'],
                'unique_together': {('name', 'academy')},
            },
        ),
        migrations.CreateModel(
            name='Offering',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(help_text='Original URL of the offering', unique=True)),
                ('title', models.CharField(help_text='Full title of the offering', max_length=300)),
                ('course_id', models.CharField(blank=True, help_text='Course identifier', max_length=50)),
                ('description', models.TextField(blank=True, help_text='Course description')),
                ('program_content', models.TextField(blank=True, help_text='Detailed program content')),
                ('remarks', models.TextField(blank=True, help_text='Additional remarks')),
                ('image_url', models.URLField(blank=True, help_text='Main course image URL')),
                ('thumbnail_url', models.URLField(blank=True, help_text='Thumbnail image URL')),
                ('is_active', models.BooleanField(default=True, help_text='Whether the offering is currently active')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('academy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='offerings', to='academies.academy')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='offerings', to='academies.category')),
                ('language', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='offerings', to='academies.language')),
            ],
            options={
                'ordering': ['academy__name', 'title'],
            },
        ),
        migrations.CreateModel(
            name='Variation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, help_text='Specific title for this variation', max_length=300)),
                ('price', models.CharField(blank=True, help_text="Price as text (e.g., 'â‚¬ 370,50')", max_length=100)),
                ('lesson_dates', models.CharField(blank=True, help_text='Date range as text', max_length=200)),
                ('start_date', models.DateTimeField(blank=True, help_text='Parsed start date', null=True)),
                ('end_date', models.DateTimeField(blank=True, help_text='Parsed end date', null=True)),
                ('description', models.TextField(blank=True, help_text='Variation-specific description')),
                ('registration_url', models.URLField(blank=True, help_text='Registration link')),
                ('is_available', models.BooleanField(default=True, help_text='Whether registration is available')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='variations', to='academies.location')),
                ('offering', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variations', to='academies.offering')),
            ],
            options={
                'ordering': ['offering__title', 'start_date'],
            },
        ),
        migrations.CreateModel(
            name='Link',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(help_text='The actual link URL')),
                ('text', models.CharField(help_text='Display text for the link', max_length=200)),
                ('link_type', models.CharField(choices=[('registration', 'Registration'), ('information', 'Information'), ('category', 'Category'), ('teacher', 'Teacher Profile'), ('location', 'Location'), ('external', 'External Resource'), ('other', 'Other')], default='other', help_text='Type of link', max_length=20)),
                ('context', models.CharField(blank=True, help_text='Context where this link appears', max_length=100)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='links', to='academies.category')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='links', to='academies.location')),
                ('offering', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='links', to='academies.offering')),
                ('teacher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='links', to='academies.teacher')),
                ('variation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='links', to='academies.variation')),
            ],
            options={
                'ordering': ['link_type', 'text'],
            },
        ),
        migrations.CreateModel(
            name='VariationTeacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(blank=True, help_text='Role of teacher in this variation', max_length=100)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variation_teachers', to='academies.teacher')),
                ('variation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variation_teachers', to='academies.variation')),
            ],
            options={
                'ordering': ['variation', 'teacher__name'],
                'unique_together': {('variation', 'teacher')},
            },
        ),
    ]
